# This is a basic workflow to help you get started with Actions

name: Test WEB

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  workflow_call:
    secrets:
      cypress_key:
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  e2e_web:
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3, 4, 5, 6, 7]

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 80

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - uses: actions/setup-node@v2
        with:
          node-version: '16.15.1'

      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2.8

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.5.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache Cypress Binary
        id: cache-cypress-binary
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/Cypress
          key: cypress-binary-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - uses: mansagroup/nrwl-nx-action@v3
        with:
          targets: lint
          projects: '@novu/web'

      - name: Start Local Stack
        env:
          DEFAULT_REGION: us-east-1
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCOUNT_ID: '000000000000'
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_EC2_METADATA_DISABLED: true
        working-directory: docker/local
        run: |
          docker-compose -f docker-compose.localstack.yml up -d
          sleep 5
          max_retry=30
          counter=0
          until $command
          do
             sleep 1
             [[ counter -eq $max_retry ]] && echo "Failed!" && exit 1
             aws --endpoint-url=http://localhost:4566 s3 ls
             echo "Trying again. Try #$counter"
             ((counter++))
          done
          sleep 1
          aws --endpoint-url=http://localhost:4566 --cli-connect-timeout 600 s3 mb s3://novu-test

      # Runs a single command using the runners shell
      - name: Build
        run: CI='' pnpm build:web

      - name: Build API
        run: CI='' pnpm build:api

      - name: Start Client
        working-directory: apps/web
        env:
          REACT_APP_API_URL: http://localhost:1336
          REACT_APP_WS_URL: http://localhost:1340
        run: pnpm pnpm start:static:build &

      - name: Start WS
        run: pnpm start:ws:test &

      - name: Start API in TEST
        run: cd apps/api && pnpm start:test &

      - name: Install wait-on plugin
        run: npm i -g wait-on

      - name: Wait on API
        run: wait-on --timeout=120000 http://localhost:1336/v1/health-check

      - name: Wait on WS
        run: wait-on --timeout=30000 http://localhost:1340/v1/health-check

      - name: Wait on WEB
        run: wait-on --timeout=120000 http://localhost:4200

      # run cypress install only when cache was not hit
      - name: Cypress install
        if: steps.cache-cypress-binary.outputs.cache-hit != 'true'
        working-directory: apps/web
        run: pnpm cypress install

      - name: Cypress run e2e
        uses: cypress-io/github-action@v4
        env:
          NODE_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.cypress_key }}
        with:
          working-directory: apps/web
          browser: chrome
          record: true
          parallel: true
          install: false
          config-file: cypress.config.ts

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/web/cypress/screenshots

  component_web:
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 80

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - uses: actions/setup-node@v2
        with:
          node-version: '16.15.1'

      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2.8

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.5.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache Cypress Binary
        id: cache-cypress-binary
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/Cypress
          key: cypress-binary-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      # Runs a single command using the runners shell
      - name: Build
        run: CI='' pnpm build:web

      # run cypress install only when cache was not hit
      - name: Cypress install
        if: steps.cache-cypress-binary.outputs.cache-hit != 'true'
        working-directory: apps/web
        run: pnpm cypress install

      - name: Run Component tests ðŸ§ª
        uses: cypress-io/github-action@v5
        env:
          NODE_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.cypress_key }}
          NODE_OPTIONS: --max_old_space_size=4096
        with:
          browser: chrome
          working-directory: apps/web
          install: false
          component: true

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/web/cypress/screenshots
